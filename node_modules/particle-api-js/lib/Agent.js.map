{"version":3,"sources":["../src/Agent.js"],"names":["Agent","baseUrl","prefix","uri","auth","query","request","method","data","undefined","form","files","requestFiles","_sanitizeFiles","_request","req","_buildRequest","_promiseResponse","fulfill","reject","_sendRequest","end","error","res","body","url","statusCode","status","errorDescription","shortErrorDescription","error_description","reason","Error","makerequest","use","_authorizationHeader","name","file","_getFormData","append","filename","path","relativePath","dirname","value","field","type","send","username","password","set","Authorization","forEach","k","i"],"mappings":"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","file":"Agent.js","sourcesContent":["/*\n ******************************************************************************\n Copyright (c) 2016 Particle Industries, Inc.  All rights reserved.\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation, either\n version 3 of the License, or (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public\n License along with this program; if not, see <http://www.gnu.org/licenses/>.\n ******************************************************************************\n */\n\nimport request from 'superagent';\nimport prefix from 'superagent-prefix';\nimport path from 'path';\n\n\nexport default class Agent {\n\n\tconstructor(baseUrl) {\n\t\tthis.prefix = prefix(baseUrl);\n\t}\n\n\tget(uri, auth, query) {\n\t\treturn this.request({ uri, auth, method: 'get', query: query });\n\t}\n\n\thead(uri, auth) {\n\t\treturn this.request({ uri, auth, method: 'head' });\n\t}\n\n\tpost(uri, data, auth) {\n\t\treturn this.request({ uri, data, auth, method: 'post' });\n\t}\n\n\tput(uri, data, auth) {\n\t\treturn this.request({ uri, data, auth, method: 'put' });\n\t}\n\n\tdelete(uri, data, auth) {\n\t\treturn this.request({ uri, data, auth, method: 'delete' });\n\t}\n\n\n\t/**\n\t *\n\t * @param {String} uri           The URI to request\n\t * @param {String} method        The method used to request the URI, should be in uppercase.\n\t * @param {String} data          Arbitrary data to send as the body.\n\t * @param {Object} auth          Authorization\n\t * @param {String} query         Query parameters\n\t * @param {Object} form          Form fields\n\t * @param {Object} files         array of file names and file content\n\t * @return {Promise} A promise. fulfilled with {body, statusCode}, rejected with { statusCode, errorDescription, error, body }\n\t */\n\trequest({ uri, method, data = undefined, auth, query = undefined, form = undefined, files = undefined }) {\n\t\tconst requestFiles = this._sanitizeFiles(files);\n\t\treturn this._request({ uri, method, data, auth, query, form, files: requestFiles });\n\t}\n\n\t/**\n\t *\n\t * @param {String} uri           The URI to request\n\t * @param {String} method        The method used to request the URI, should be in uppercase.\n\t * @param {String} data          Arbitrary data to send as the body.\n\t * @param {Object} auth          Authorization\n\t * @param {String} query         Query parameters\n\t * @param {Object} form          Form fields\n\t * @param {Object} files         array of file names and file content\n\t * @return {Promise} A promise. fulfilled with {body, statusCode}, rejected with { statusCode, errorDescription, error, body }\n\t */\n\t_request({ uri, method, data, auth, query, form, files }) {\n\t\tconst req = this._buildRequest({ uri, method, data, auth, query, form, files });\n\t\treturn this._promiseResponse(req);\n\t}\n\n\t/**\n\t * Promises to send the request and retreive the response.\n\t * @param {Request} req The request to send\n\t * @returns {Promise}   The promise to send the request and retrieve the response.\n\t * @private\n\t */\n\t_promiseResponse(req) {\n\t\treturn new Promise((fulfill, reject) => this._sendRequest(req, fulfill, reject));\n\t}\n\n\t/**\n\t * Sends the given request, calling the fulfill or reject methods for success/failure.\n\t * @param {object} request   The request to send\n\t * @param {function} fulfill    Called on success with the response\n\t * @param {function} reject     Called on failure with the failure reason.\n\t * @private\n\t * @returns {undefined} Nothing\n\t */\n\t_sendRequest(request, fulfill, reject) {\n\t\trequest.end((error, res) => {\n\t\t\tconst body = res && res.body;\n\t\t\tif (error) {\n\t\t\t\tconst uri = request.url;\n\t\t\t\tconst statusCode = error.status;\n\t\t\t\tlet errorDescription = `${statusCode ? 'HTTP error ' + statusCode : 'Network error'} from ${uri}`;\n\t\t\t\tlet shortErrorDescription;\n\t\t\t\tif (body && body.error_description) {\n\t\t\t\t\terrorDescription += ' - ' + body.error_description;\n\t\t\t\t\tshortErrorDescription = body.error_description;\n\t\t\t\t}\n\t\t\t\tconst reason = new Error(errorDescription);\n\t\t\t\tObject.assign(reason, { statusCode, errorDescription, shortErrorDescription, error, body });\n\t\t\t\treject(reason);\n\t\t\t} else {\n\t\t\t\tfulfill({\n\t\t\t\t\tbody: body,\n\t\t\t\t\tstatusCode: res.statusCode\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t_buildRequest({ uri, method, data, auth, query, form, files, makerequest=request }) {\n\t\tconst req = makerequest(method, uri);\n\t\tif (this.prefix) {\n\t\t\treq.use(this.prefix);\n\t\t}\n\t\tthis._authorizationHeader(req, auth);\n\t\tif (query) {\n\t\t\treq.query(query);\n\t\t}\n\t\tif (files) {\n\t\t\tfor (let [name, file] of Object.entries(files)) {\n\t\t\t\treq._getFormData().append(name, file.data, {\n\t\t\t\t\tfilename: file.path,\n\t\t\t\t\trelativePath: path.dirname(file.path)\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (form) {\n\t\t\t\tfor (let [name, value] of Object.entries(form)) {\n\t\t\t\t\treq.field(name, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (form) {\n\t\t\treq.type('form');\n\t\t\treq.send(form);\n\t\t} else if (data) {\n\t\t\treq.send(data);\n\t\t}\n\t\treturn req;\n\t}\n\n\t/**\n\t * Adds an authorization header.\n\t * @param {Request} req     The request to add the authorization header to.\n\t * @param {object|string}  auth    The authorization. Either a string authorization bearer token,\n\t *  or a username/password object.\n\t * @returns {Request} req   The original request.\n\t */\n\t_authorizationHeader(req, auth) {\n\t\tif (auth) {\n\t\t\tif (auth.username !== undefined) {\n\t\t\t\treq.auth(auth.username, auth.password);\n\t\t\t} else {\n\t\t\t\treq.set({ Authorization: `Bearer ${auth}` });\n\t\t\t}\n\t\t}\n\t\treturn req;\n\t}\n\n\t/**\n\t *\n\t * @param {Array} files converts the file names to file, file1, file2.\n\t * @returns {object} the renamed files.\n\t */\n\t_sanitizeFiles(files) {\n\t\tlet requestFiles;\n\t\tif (files) {\n\t\t\trequestFiles = {};\n\t\t\tObject.keys(files).forEach((k, i) => {\n\t\t\t\tconst name = i ? `file${i + 1}` : 'file';\n\t\t\t\trequestFiles[name] = {\n\t\t\t\t\tdata: files[k],\n\t\t\t\t\tpath: k\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\treturn requestFiles;\n\t}\n}\n\n"]}