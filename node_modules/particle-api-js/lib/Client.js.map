{"version":3,"sources":["../src/Client.js"],"names":["Client","auth","api","query","listLibraries","then","libraries","payload","body","data","map","l","name","getLibrary","library","getLibraryVersions","archive","contributeLibrary","_throwError","error","publishLibrary","version","force","deleteLibrary","errors","errorMessages","e","message","join","Error","url","downloadFile","files","platformId","targetVersion","compileCode","signal","deviceId","signalDevice","listDevices","listBuildTargets","onlyFeatured","targets","target","platforms","platform","push","prerelease","prereleases","indexOf","firmware_vendor"],"mappings":"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","file":"Client.js","sourcesContent":["import Particle from './Particle';\nimport Library from './Library';\n\nexport default class Client {\n\tconstructor({ auth, api = new Particle() }) {\n\t\tObject.assign(this, { auth, api });\n\t}\n\n\t/**\n\t * Get firmware library objects\n\t * @param  {Object} query The query parameters for libraries. See Particle.listLibraries\n\t * @return {Promise}\n\t */\n\tlibraries(query = {}) {\n\t\treturn this.api.listLibraries(Object.assign({}, query, { auth: this.auth }))\n\t\t.then(payload => {\n\t\t\tconst libraries = payload.body.data || [];\n\t\t\treturn libraries.map(l => new Library(this, l));\n\t\t});\n\t}\n\n\t/**\n\t * Get one firmware library object\n\t * @param  {String} name Name of the library to fetch\n\t * @param  {Object} query The query parameters for libraries. See Particle.getLibrary\n\t * @return {Promise}\n\t */\n\tlibrary(name, query = {}) {\n\t\treturn this.api.getLibrary(Object.assign({}, query, { name, auth: this.auth }))\n\t\t\t.then(payload => {\n\t\t\t\tconst library = payload.body.data || {};\n\t\t\t\treturn new Library(this, library);\n\t\t\t});\n\t}\n\n\t/**\n\t * Get list of library versions\n\t * @param  {String} name Name of the library to fetch\n\t * @param  {Object} query The query parameters for versions. See Particle.getLibraryVersions\n\t * @return {Promise}\n\t */\n\tlibraryVersions(name, query = {}) {\n\t\treturn this.api.getLibraryVersions(Object.assign({}, query, { name, auth: this.auth }))\n\t\t\t.then(payload => {\n\t\t\t\tconst libraries = payload.body.data || [];\n\t\t\t\treturn libraries.map(l => new Library(this, l));\n\t\t\t});\n\t}\n\n\t/**\n\t * Contribute a new library version\n\t * @param  {Buffer} archive The compressed archive with the library source\n\t * @return {Promise}\n\t */\n\tcontributeLibrary(archive) {\n\t\treturn this.api.contributeLibrary({ archive, auth: this.auth })\n\t\t\t.then(payload => {\n\t\t\t\tconst library = payload.body.data || {};\n\t\t\t\treturn new Library(this, library);\n\t\t\t}, error => {\n\t\t\t\tthis._throwError(error);\n\t\t\t});\n\t}\n\n\t/**\n\t * Make the the most recent private library version public\n\t * @param  {string} name The name of the library to publish\n\t * @return {Promise} To publish the library\n\t */\n\tpublishLibrary(name) {\n\t\treturn this.api.publishLibrary({ name, auth: this.auth })\n\t\t\t.then(payload => {\n\t\t\t\tconst library = payload.body.data || {};\n\t\t\t\treturn new Library(this, library);\n\t\t\t}, error => {\n\t\t\t\tthis._throwError(error);\n\t\t\t});\n\t}\n\n\t/**\n\t * Delete an entire published library\n\t * @param  {String} $0.name Name of the library to delete\n\t * @param  {String} $0.force Key to force deleting a public library\n\t * @return {Promise}\n\t */\n\tdeleteLibrary({ name, version, force }) {\n\t\treturn this.api.deleteLibrary({ name, force, auth: this.auth })\n\t\t\t.then(payload => {\n\t\t\t\treturn true;\n\t\t\t}, error => {\n\t\t\t\tthis._throwError(error);\n\t\t\t});\n\t}\n\n\t_throwError(error) {\n\t\tif (error.body && error.body.errors) {\n\t\t\tconst errorMessages = error.body.errors.map((e) => e.message).join('\\n');\n\t\t\tthrow new Error(errorMessages);\n\t\t}\n\t\tthrow error;\n\t}\n\n\tdownloadFile(url) {\n\t\treturn this.api.downloadFile({ url });\n\t}\n\n\t/**\n\t * @param {Object} files Object containing files to be compiled\n\t * @param {Number} platformId Platform id number of the device you are compiling for\n\t * @param {String} targetVersion System firmware version to compile against\n\t * @return {Promise}\n\t * @deprecated Will be removed in 6.5\n\t */\n\tcompileCode(files, platformId, targetVersion) {\n\t\treturn this.api.compileCode({ files, platformId, targetVersion, auth: this.auth });\n\t}\n\n\t/**\n\t * @param {String} $0.deviceId Device ID or Name\n\t * @param {Boolean} $0.signal   Signal on or off\n\t * @return {Promise}\n\t * @deprecated Will be removed in 6.5\n\t */\n\tsignalDevice({ signal, deviceId }) {\n\t\treturn this.api.signalDevice({ signal, deviceId, auth: this.auth });\n\t}\n\n\t/**\n\t * @return {Promise}\n\t * @deprecated Will be removed in 6.5\n\t */\n\tlistDevices() {\n\t\treturn this.api.listDevices({ auth: this.auth });\n\t}\n\n\t/**\n\t * @return {Promise}\n\t * @deprecated Will be removed in 6.5\n\t */\n\tlistBuildTargets() {\n\t\treturn this.api.listBuildTargets({ onlyFeatured: true, auth: this.auth })\n\t\t\t.then(payload => {\n\t\t\t\tlet targets = [];\n\t\t\t\tfor (let target of payload.body.targets) {\n\t\t\t\t\tfor (let platform of target.platforms) {\n\t\t\t\t\t\ttargets.push({\n\t\t\t\t\t\t\tversion: target.version,\n\t\t\t\t\t\t\tplatform: platform,\n\t\t\t\t\t\t\tprerelease: target.prereleases.indexOf(platform) > -1,\n\t\t\t\t\t\t\tfirmware_vendor: target.firmware_vendor\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn targets;\n\t\t\t}, error => {\n\n\t\t\t});\n\t}\n}\n"]}